<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cofc.service.UserCommonService">
	<resultMap type="com.cofc.pojo.UserCommon" id="BaseResultMap">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="head_image" property="headImage" jdbcType="VARCHAR" />
		<result column="user_sex" property="userSex" jdbcType="INTEGER" />
		<result column="head_card" property="headCard" jdbcType="VARCHAR" />
		<result column="card_image" property="cardImage" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="e_mail" property="email" jdbcType="VARCHAR" />
		<result column="wallet_balance" property="walletBalance"
			jdbcType="DOUBLE" />
		<result column="compony" property="compony" jdbcType="VARCHAR" />
		<result column="compony_introduce" property="componyIntroduce"
			jdbcType="VARCHAR" />
		<result column="union_id" property="unionId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
		<result column="user_level" property="userLevel" jdbcType="INTEGER" />
		<result column="integral" property="integral" jdbcType="INTEGER" />
		<result column="is_manager" property="isManager" jdbcType="INTEGER" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="concerned_count" property="concernedCount" jdbcType="INTEGER" />
		<result column="is_member" property="isMember" jdbcType="INTEGER" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="login_plat" property="loginPlat" jdbcType="INTEGER" />
		<result column="access_time" property="accessTime" jdbcType="TIMESTAMP" />
		<result column="is_renzheng" property="isRenzheng" jdbcType="INTEGER" />
		<result column="token_code" property="tokenCode" jdbcType="VARCHAR" />
		<result column="user_position" property="userPosition" jdbcType="VARCHAR" />
		<result column="introducer" property="introducer" jdbcType="INTEGER" />
		<result column="is_agent" property="isAgent" jdbcType="INTEGER" />
		<result column="user_token" property="userToken" jdbcType="DOUBLE" />
		<result column="user_code_url" property="userCodeUrl" jdbcType="VARCHAR" />
		<result column="rank" property="rank" jdbcType="INTEGER" />
		<result column="country" property="country" jdbcType="VARCHAR" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="bank_card" property="bankCard" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="VARCHAR" />
		
		<result column="qy_user_id" property="qyUserId" jdbcType="VARCHAR" />
		<result column="qy_open_id" property="qyOpenId" jdbcType="VARCHAR" />
		<result column="qq_open_id" property="qqOpenId" jdbcType="VARCHAR" />
		<result column="wx_open_id" property="wxOpenId" jdbcType="VARCHAR" />
		<result column="person_label" property="personLabel" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sys_mes" property="sysMes" jdbcType="INTEGER" />
		<result column="reg_source" property="regSource" jdbcType="INTEGER" />
		<result column="user_role" property="userRole" jdbcType="INTEGER" />
	</resultMap>
	<select id="getUserByOpenId" resultMap="BaseResultMap">
		select * from TB_USER_COMMON where open_id = #{openid}
	</select>
	<select id="getUserByPhone" resultMap="BaseResultMap">
		select * from TB_USER_COMMON where phone = #{phone}
	</select>
	<insert id="addNewUserCommon" parameterType="com.cofc.pojo.UserCommon"
		useGeneratedKeys="true" keyProperty="userId">
		insert into
		TB_USER_COMMON(nick_name,real_name,head_image,user_sex,card_image,phone,e_mail,wallet_balance,
		compony,compony_introduce,union_id,create_time,update_time,user_level,integral,is_manager,open_id,
		user_status,login_plat,access_time,is_renzheng,head_card,concerned_count,is_member,token_code,
		introducer,user_token,qy_user_id,qy_open_id,country,province,city,bank_card,user_name,password,birthday,person_label,
		qq_open_id,wx_open_id,reg_source,user_role)
		values(#{nickName},#{realName},#{headImage},#{userSex},#{cardImage},#{phone},#{email},
		#{walletBalance},#{compony},#{componyIntroduce},#{unionId},#{createTime},#{updateTime},
		#{userLevel},#{integral},#{isManager},#{openId},#{userStatus},#{loginPlat},#{accessTime},
		#{isRenzheng},#{headCard},#{concernedCount},#{isMember},#{tokenCode},#{introducer},#{userToken}
		,#{qyUserId},#{qyOpenId},#{country},#{province},#{city},#{bankCard},#{userName},#{password},#{birthday},
		#{personLabel},#{qqOpenId},#{wxOpenId},#{regSource},#{userRole})
	</insert>
	<select id="getUserByUserId" resultMap="BaseResultMap">
		select * from TB_USER_COMMON where user_id = #{userId}
	</select>
	<update id="commonInfoUpdate" parameterType="com.cofc.pojo.UserCommon"
	     useGeneratedKeys="true" keyProperty="userId">
		update TB_USER_COMMON
		<trim prefix="set" suffixOverrides=",">
			<if test="nickName!=null and nickName!=''">nick_name=#{nickName},</if>
			<if test="realName!=null and realName!=''">real_name=#{realName},</if>
			<if test="headImage!=null and headImage!=''">head_image=#{headImage},</if>
			<if test="userSex!=null">user_sex=#{userSex},</if>
			<if test="headCard!=null and headCard!=''">head_card=#{headCard},</if>
			<if test="cardImage!=null and cardImage!=''">card_image=#{cardImage},</if>
			<if test="phone!=null and phone!=''">phone=#{phone},</if>
			<if test="email!=null and email!=''">e_mail=#{email},</if>
			<if test="compony!=null and compony!=''">compony=#{compony},</if>
			<if test="componyIntroduce!=null and componyIntroduce!=''">compony_introduce=#{componyIntroduce},</if>
			<if test="updateTime!=null">update_time=#{updateTime},</if>
			<if test="walletBalance!=null">wallet_balance=#{walletBalance},</if>
			<if test="userLevel!=null">user_level=#{userLevel},</if>
			<if test="integral!=null">integral=#{integral},</if>
			<if test="isManager!=null">is_manager=#{isManager},</if>
			<if test="concernedCount!=null">concerned_count=#{concernedCount},</if>
			<if test="isMember!=null">is_member=#{isMember},</if>
			<if test="userStatus!=null">user_status=#{userStatus},</if>
			<if test="accessTime!=null">access_time=#{accessTime},</if>
			<if test="isRenzheng!=null">is_renzheng=#{isRenzheng},</if>
			<if test="tokenCode!=null">token_code=#{tokenCode},</if>
			<if test="userPosition!=null">user_position=#{userPosition},</if>
			<if test="userToken!=null">user_token=#{userToken},</if>
			<if test="userCodeUrl!=null and userCodeUrl!=''">user_code_url=#{userCodeUrl},</if>
			<if test="qyUserId!=null and qyUserId!=''">qy_user_id=#{qyUserId},</if>
			<if test="qyOpenId!=null and qyOpenId!=''">qy_open_id=#{qyOpenId},</if>
			<if test="country!=null and country!=''">country=#{country},</if>
			<if test="province!=null and province!=''">province=#{province},</if>
			<if test="city!=null and city!=''">city=#{city},</if>
			<if test="bankCard!=null and bankCard!=''">bank_card=#{bankCard},</if>
			<if test="userName!=null and userName!=''">user_name=#{userName},</if>
			<if test="password!=null and password!=''">password=#{password},</if>
			<if test="sysMes!=null">sys_mes=#{sysMes},</if>
			<if test="birthday != null and birthday != ''">birthday=#{birthday},</if>
			<if test="personLabel != null and personLabel != ''">person_label=#{personLabel},</if>
			<if test="qqOpenId!=null and qqOpenId!=''">qq_open_id=#{qqOpenId},</if>
			<if test="wxOpenId!=null and wxOpenId!=''">wx_open_id=#{wxOpenId},</if>
			<if test="regSource!=null">reg_source=#{regSource},</if>
			<if test="userRole!=null">user_role=#{userRole},</if>
		</trim>
		where user_id = #{userId}
	</update>
	<update id="changeUserRenzheng">
		update TB_USER_COMMON set is_renzheng = #{isRenzheng} where user_id = #{userId}
	</update>
	<update id="changeUserIsManager">
		update TB_USER_COMMON set is_manager = #{isManager} where user_id = #{userId}
	</update>
	<select id="getCountUser" resultType="int">
		select count(*) from TB_USER_COMMON where 1=1
		<if test="user !=null">
		<if test="user.loginPlat!=null">
			and login_plat = #{user.loginPlat}
		</if>
		<if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		<if test="user.userId!=null">
			and user_id = #{user.userId}
		</if>
		<if test="user.introducer!=null">
			and introducer = #{user.introducer}
		</if>
		<if test="user.userStatus!=null">
			and user_status = #{user.userStatus}
		</if>
		<if test="user.isManager!=null">
			and is_manager = #{user.isManager}
		</if>
		<if test="user.isAgent != null">
		    and is_agent = #{user.isAgent}
		</if>
		</if>
		<if test="startTime!=null and startTime !=''">
			and create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and create_time &lt;= #{endTime}
		</if>
		<if test="loginPlat1 !=null">
			and login_plat = #{loginPlat1}
		</if>
	</select>
	<select id="findUserList" resultMap="BaseResultMap">
		select * from TB_USER_COMMON where 1=1
		
		<if test="user != null">
		<if test="user.loginPlat!=null">
			and login_plat = #{user.loginPlat}
		</if>
		<if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		<if test="user.userId!=null">
			and user_id = #{user.userId}
		</if>
		<if test="user.introducer!=null">
			and introducer = #{user.introducer}
		</if>
		<if test="user.isRenzheng!=null">
			and is_renzheng = #{user.isRenzheng}
		</if>
		<if test="user.userStatus!=null">
			and user_status = #{user.userStatus}
		</if>
		<if test="user.isManager!=null">
			and is_manager = #{user.isManager}
		</if>
		<if test="user.isAgent != null">
		    and is_agent = #{user.isAgent}
		</if>
		</if>
		<if test="loginPlat1 !=null">
			and login_plat = #{loginPlat1}
		</if>
		<if test="startTime!=null and startTime !=''">
			and	create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and create_time &lt;= #{endTime}
		</if>
		order by access_time desc limit #{rowsNo},#{pageSize}
	</select>
	<delete id="deleteUserId">
	   delete from TB_USER_COMMON where user_id = #{userId}
	</delete>
	
	<select id="getUserIdList" resultMap="BaseResultMap">
	  select * from TB_USER_COMMON
	</select>
	
	<!-- 防止前端接口调用过之前的sql,增量的sql重写 -->
	
	<!-- 获取其他平台的用户 -->
	 <select id="getUserListByLoginPlat" resultMap="BaseResultMap">
	  	 select * from TB_USER_COMMON where 1=1 
	  	<if test="user != null">
		
		<if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		<if test="user.userId!=null">
			and user_id = #{user.userId}
		</if>	
		<if test="user.isRenzheng!=null">
			and is_renzheng = #{user.isRenzheng}
		</if>
		<if test="user.userStatus!=null">
			and user_status = #{user.userStatus}
		</if>
		<if test="user.isAgent != null">
		    and is_agent = #{user.isAgent}
		</if>
		</if> 
	  	 and login_plat in
	  	 <foreach item="item"  index="index" collection="loginPlatList" open="("
					separator="," close=")">
					#{item}
		</foreach>
		order by create_time desc limit #{page},#{limit}
	 </select>
	 
	 <select id="getUserCountByLoginPlat" resultType="int">
	   select count(*) from TB_USER_COMMON where 1=1
	    <if test="user != null">
		
		<if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		<if test="user.userId!=null">
			and user_id = #{user.userId}
		</if>	
		<if test="user.isRenzheng!=null">
			and is_renzheng = #{user.isRenzheng}
		</if>
		<if test="user.isAgent != null">
		    and is_agent = #{user.isAgent}
		</if>
		<if test="user.userStatus!=null">
			and user_status = #{user.userStatus}
		</if>
		</if> 
	    and login_plat in
	    <foreach item="item"  index="index" collection="loginPlatList" open="("
					separator="," close=")">
					#{item}
		</foreach>
	 </select>
	 <select id="getVisitList" resultMap="BaseResultMap">
	   select * from tb_user_common where introducer = #{introducer} and login_plat = #{loginPlat}
	   order by create_time desc limit #{pageNo},#{pageSize}
	 </select>
	 
	 <!-- 代理 -->
	 <update id="setAgent">
	     update tb_user_common set is_agent = #{isAgent} where user_id = #{userId}
	 </update>
	 
	 <select id="getAgentList" resultMap="BaseResultMap">
	    select * from tb_user_common where is_agent = 1 
	    <if test="user.loginPlat != null">and login_plat = #{user.loginPlat}</if>
	    <if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		order by create_time desc limit #{page},#{limit}
	 </select>
	 
	 <select id="getAgentCount" resultType="int">
	    select count(*) from tb_user_common where is_agent = 1
	    <if test="user.loginPlat != null">and login_plat = #{user.loginPlat}</if>
	    <if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
	 </select>
	 <select id="getAgentListByLoginPlat" resultMap="BaseResultMap">
	    select * from tb_user_common where is_agent = 1
	    <if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		and login_plat in 
		 <foreach item="item"  index="index" collection="loginPlatList" open="("
					separator="," close=")">
					#{item}
		</foreach>
		order by create_time desc limit #{page},#{limit}
	 </select>
	 <select id="getAgentCountByLoginPlat" resultType="int">
	    select count(*) from tb_user_common where is_agent = 1
	    <if test="user.nickName!=null and user.nickName!=''">
			and (nick_name like CONCAT('%',#{user.nickName},'%') or real_name like CONCAT('%',#{user.nickName},'%'))
		</if>
		and login_plat in 
		 <foreach item="item"  index="index" collection="loginPlatList" open="("
					separator="," close=")">
					#{item}
		</foreach>
	 </select>
	 
	 <select id="getVisitCountByUserId" resultType="int">
	    select count(*) from tb_user_common where introducer = #{introducer} and login_plat = #{loginPlat}
	 </select>
	 <select id="getVisitListByUserId" resultMap="BaseResultMap">
	    select * from tb_user_common where introducer = #{introducer} and login_plat = #{loginPlat}
	    order by create_time desc limit #{page},#{limit}
	 </select>
	 <select id="nearlyLogin" resultMap="BaseResultMap">
	 	select * from tb_user_common where TO_DAYS(access_time) = TO_DAYS(NOW()) and user_id = #{userId}
	 </select>
	 <select id="getInfoByqyOpenId" resultMap="BaseResultMap">
	 	select * from tb_user_common where login_plat = #{appId} and qy_open_id = #{qyOpenId} 
	 </select>
	 <select id="getUserByAccount" resultMap="BaseResultMap">
	 	select user_id,real_name,password,phone,e_mail,user_name from tb_user_common where login_plat = #{appId}
        and (phone = #{account} or e_mail = #{account} or user_name = #{account})
        <if test="password != null and password != ''">
        	    and password = #{password}	
        </if>
	 </select>
	 <select id="checkAccount" resultType="int">
	 	select count(*) from tb_user_common where login_plat = #{appId}
	 	<if test="account != null and account != ''">and user_name = #{account}</if>
	 	<if test="phone != null and phone != ''">and phone = #{phone}</if>
	 </select>
	 <select id="findPwd" resultMap="BaseResultMap">
	 	select * from tb_user_common where login_plat = #{loginPlat} and phone = #{phone}
	 </select>
	 
	 <select id="getUserByKeyWord" resultMap="BaseResultMap">
	 SELECT real_name,nick_name,user_name,phone,user_id FROM tb_user_common where 1=1
	 <if test="keyword !=null and keyword !=''">
	 	and (phone like CONCAT('%',#{keyword},'%') or real_name like CONCAT('%',#{keyword},'%'))
	 </if>
	 <if test="loginPlatList != null and loginPlatList != ''">
	 and login_plat in 
	<foreach item="item"  index="index" collection="loginPlatList" open="("
					separator="," close=")">
					#{item}
	</foreach>
	</if>	
	 </select>
	 <select id="getUserRankList" resultMap="BaseResultMap">
	 	select * from tb_user_common where 1=1
	 	<if test="user.loginPlat!=null">
			and login_plat = #{user.loginPlat}
		</if>
		order by integral desc
		<if test="page != null and limit != null">
			limit #{page},#{limit}
		</if>
	 </select>
	 <select id="getRankByUserId" resultMap="BaseResultMap">
	 	select * from (select user_id,head_image,nick_name,real_name,phone,integral,@rank := @rank+1 as rank  from tb_user_common u,
			(select @rank := 0) u where u.login_plat = #{loginPlat} order by u.integral DESC) a where a.user_id = #{userId}
	 </select>
	 <select id="getPhoneIsAlready" resultMap="BaseResultMap">
	 	select * from tb_user_common where 1=1
	 	<if test="loginPlat != null">
	 		and login_plat = #{loginPlat}
	 	</if>
	 	<if test="userId != null">
	 		and user_id &lt;&gt;#{userId}
	 	</if>
	 	<if test="phone != null and phone != ''">
	 		and phone = #{phone}
	 	</if>
	 </select>
	 <select id="getUserInfoByQQOrWXOpenId" resultMap="BaseResultMap">
	 	select * from tb_user_common where 1=1
	 	<if test="loginPlat != null">
	 		and login_plat = #{loginPlat}
	 	</if>
	 	<if test="qqOpenId != null and qqOpenId != ''">
	 		and qq_open_id = #{qqOpenId}
	 	</if>
	 	<if test="wxOpenId != null and wxOpenId != ''">
	 		and wx_open_id = #{wxOpenId}
	 	</if>
	 </select>
</mapper>