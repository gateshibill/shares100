<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cofc.service.GoodsOrderService">
	<resultMap type="com.cofc.pojo.GoodsOrder" id="BaseResultMap">
		<id column="pay_id" property="payId" jdbcType="INTEGER" />
		<result column="goods_id" property="goodsId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" />
		<result column="pay_status" property="payStatus" jdbcType="INTEGER" />
		<result column="pay_number" property="payNumber" jdbcType="INTEGER" />
		<result column="total_fee" property="totalFee" jdbcType="DOUBLE" />
		<result column="real_fee" property="realFee" jdbcType="DOUBLE" />
		<result column="out_trade_number" property="outTradeNumber"
			jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" />
		<result column="login_plat" property="loginPlat" jdbcType="INTEGER" />
		<result column="is_send" property="isSend" jdbcType="INTEGER" />
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="send_code" property="sendCode" jdbcType="VARCHAR" />
		<result column="shopping_address" property="shoppingAddress"
			jdbcType="VARCHAR" />
		<result column="delivery_name" property="deliveryName"
			jdbcType="VARCHAR" />
		<result column="delivery_phone" property="deliveryPhone"
			jdbcType="VARCHAR" />
		<result column="post_code" property="postCode" jdbcType="VARCHAR" />
		<result column="tb_user_order_id" property="userOrderID"
			jdbcType="INTEGER" />

		<association property="orderSeller" javaType="com.cofc.pojo.UserCommon">
			<id column="user_id" property="userId" jdbcType="INTEGER" />
			<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
			<result column="real_name" property="realName" jdbcType="VARCHAR" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="e_mail" property="email" jdbcType="VARCHAR" />
			<result column="head_image" property="headImage" jdbcType="VARCHAR" />
			<result column="user_sex" property="userSex" jdbcType="INTEGER" />
		</association>
		<association property="orderBuyer" javaType="com.cofc.pojo.Buyer">
			<id column="buyer_id" property="buyerId" jdbcType="INTEGER" />
			<result column="buyer_nick_name" property="buyerNickName"
				jdbcType="VARCHAR" />
			<result column="buyer_real_name" property="buyerRealName"
				jdbcType="VARCHAR" />
			<result column="buyer_head_image" property="buyerHeadImage"
				jdbcType="VARCHAR" />
		</association>
		<association property="orderGoods" javaType="com.cofc.pojo.GoodsCommon">
			<id column="goods_id" property="goodsId" jdbcType="INTEGER" />
			<result column="goods_name" property="goodsName" jdbcType="INTEGER" />
			<result column="publisher_id" property="publisherId" jdbcType="INTEGER" />
			<result column="is_hot" property="isHot" jdbcType="INTEGER" />
			<result column="first_cost" property="firstCost" jdbcType="DOUBLE" />
			<result column="goods_stock" property="goodsStock" jdbcType="INTEGER" />
			<result column="publisher_id" property="publisherId" jdbcType="INTEGER" />
			<result column="sell_price" property="sellPrice" jdbcType="DOUBLE" />
			<result column="is_selled" property="isSelled" jdbcType="INTEGER" />
			<result column="goods_image" property="goodsImage" jdbcType="VARCHAR" />
			<result column="goods_details" property="goodsDetails"
				jdbcType="INTEGER" />
			<result column="goods_type" property="goodsType" jdbcType="INTEGER" />
			<result column="is_remove" property="isRemove" jdbcType="INTEGER" />
			<result column="selled_count" property="selledCount" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<insert id="addNewGoodsOrder" parameterType="com.cofc.pojo.GoodsOrder"
		useGeneratedKeys="true" keyProperty="payId">
		insert into
		TB_GOODS_ORDER(goods_id,user_id,create_time,pay_status,pay_number,
		total_fee,login_plat,is_send,pay_type,send_code,shopping_address,
		delivery_name,delivery_phone,post_code,tb_user_order_id)
		values(#{goodsId},#{userId},#{createTime},#{payStatus},#{payNumber},
		#{totalFee},#{loginPlat,},#{isSend},#{payType},#{sendCode},#{shoppingAddress},
		#{deliveryName},#{deliveryPhone},#{postCode},#{userOrderID});
	</insert>
	<select id="findMyGoodsOrder" resultMap="BaseResultMap">
		select * from TB_GOODS_ORDER o left join TB_GOODS_COMMON g on
		o.goods_id = g.goods_id where 1 = 1
		<if test="go!=null">
			<if test="go.userId!=null">
				and o.user_id = #{go.userId}
			</if>
			<if test="go.payStatus!=null">
				and o.pay_status=#{go.payStatus}
			</if>
			<if test="go.loginPlat!=null">
				and o.login_plat=#{go.loginPlat}
			</if>
		</if>
		order by o.create_time desc limit #{rowsId},#{pageSize}
	</select>
	<delete id="deleteGoodsOrder" parameterType="com.cofc.pojo.GoodsOrder">
		delete from
		TB_GOODS_ORDER where pay_id = #{payId}
	</delete>
	<update id="insertOutTradeNo" parameterType="com.cofc.pojo.GoodsOrder">
		update
		TB_GOODS_ORDER set out_trade_number=#{outTradeNumber} where pay_id =
		#{payId}
	</update>
	<select id="findThisGoodsOrder" resultMap="BaseResultMap">
		select * from
		TB_GOODS_ORDER where goods_id = #{goodsId} and pay_status=0
	</select>
	<select id="findOrderInfoByGoodsId" resultMap="BaseResultMap">
		select
		o.*,g.*,buy.user_id as buyer_id,buy.nick_name as
		buyer_nick_name,buy.real_name as buyer_real_name,buy.head_image as
		buyer_head_image
		from TB_GOODS_ORDER o left join TB_GOODS_COMMON g on
		o.goods_id =
		g.goods_id left join TB_USER_COMMON buy on o.user_id =
		buy.user_id
		where o.goods_id = #{goodsId}
		order by o.create_time desc
		limit
		#{rowsId},#{pageSize};
	</select>
	<select id="findOrderInfoByGoodsId2" resultType="java.util.HashMap">
		select d.order_id,e.head_image,e.nick_name,d.create_time, d.objects
		from tb_user_order d,tb_user_common e where
		order_id in (

		select c.order_id from tb_user_order c where object_id = #{goodsId} and
		order_type = 0 UNION

		select b.order_id from (select a.order_id,CONCAT(',', a.multi_id, ',') as
		orders from tb_user_order a where object_id is null and order_type =0)
		b where orders like "%,${goodsId},%"

		)
		<if test="payStatus != null"> and d.pay_status = #{payStatus}</if>
		and d.user_id = e.user_id order by d.create_time desc limit
		#{rowsId},#{pageSize};
	</select>
	<select id="findOrderInfoBySellerId" resultMap="BaseResultMap">
		select
		o.*,g.*,buy.user_id as buyer_id,buy.nick_name as
		buyer_nick_name,buy.real_name as buyer_real_name,buy.head_image as
		buyer_head_image
		from TB_GOODS_ORDER o left join TB_GOODS_COMMON g on
		o.goods_id =
		g.goods_id left join TB_USER_COMMON buy on o.user_id =
		buy.user_id
		where g.publisher_id = #{sellerId}
		order by o.create_time
		desc limit
		#{rowsId},#{pageSize};
	</select>
	<select id="getOrderByPayId" resultMap="BaseResultMap">
		select * from
		TB_GOODS_ORDER where pay_id = #{prepayId}
	</select>
	<update id="userPayOrder" parameterType="com.cofc.pojo.GoodsOrder">
		update TB_GOODS_ORDER
		<trim prefix="set" suffixOverrides=",">
			<if test="updateTime!=null">update_time = #{updateTime},</if>
			<if test="payStatus!=null">pay_status=#{payStatus},</if>
			<if test="realFee!=null">real_fee =#{realFee},</if>
		</trim>
		where pay_id = #{payId}
	</update>
	<select id="findAllOrder" resultMap="BaseResultMap">
		SELECT o.*,g.*,sell.*,buy.user_id as buyer_id,buy.nick_name as
		buyer_nick_name,buy.real_name as buyer_real_name,buy.head_image as
		buyer_head_image FROM TB_GOODS_ORDER o
		LEFT JOIN TB_GOODS_COMMON g ON
		o.goods_id =
		g.goods_id LEFT JOIN
		TB_USER_COMMON sell ON sell.user_id =
		g.publisher_id LEFT
		JOIN
		TB_USER_COMMON buy ON o.user_id = buy.user_id
		WHERE 1= 1
		<if test="order.payStatus!=null">
			and o.pay_status =#{order.payStatus}
		</if>
		<if test="buyerWords!=null and buyerWords!=''">
			and buy.nick_name like CONCAT('%',#{buyerWords},'%')
		</if>
		<if test="sellerWords!=null and sellerWords!=''">
			and sell.nick_name like CONCAT('%',#{sellerWords},'%')
		</if>
		<if test="goods.goodsName!=null and goods.goodsName!=''">
			and (g.goods_name like
			CONCAT('%',#{goods.goodsName},'%'))
		</if>
		<if test="startTime!=null and startTime!=''">
			and o.create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and o.create_time &lt;= #{endTime}
		</if>
		order by o.create_time desc limit #{rowsId},#{pageSize}
	</select>
	<select id="getCountOrders" resultType="int">
		select count(*) from TB_GOODS_ORDER o left join TB_GOODS_COMMON g on
		o.goods_id =
		g.goods_id left join TB_USER_COMMON sell on sell.user_id =
		g.publisher_id left
		join TB_USER_COMMON buy on o.user_id = buy.user_id
		where 1= 1
		<if test="order.payStatus!=null">
			and o.pay_status =#{order.payStatus}
		</if>
		<if test="goods.goodsName!=null and goods.goodsName!=''">
			and (g.goods_name like
			CONCAT('%',#{goods.goodsName},'%'))
		</if>
		<if test="buyerWords!=null and buyerWords!=''">
			and buy.nick_name like CONCAT('%',#{buyerWords},'%')
		</if>
		<if test="sellerWords!=null and sellerWords!=''">
			and sell.nick_name like CONCAT('%',#{sellerWords},'%')
		</if>
		<if test="startTime!=null and startTime!=''">
			and o.create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and o.create_time &lt;= #{endTime}
		</if>
	</select>
	<select id="getCountOfTradeMoney" resultType="String">
		select sum(real_fee) from TB_GOODS_ORDER where pay_status=1
		<if test="startTime!=null and startTime!=''">
			and create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and create_time &lt;= #{endTime}
		</if>
	</select>
	<select id="getCountOfTradeGoods" resultType="String">
		select sum(pay_number) from TB_GOODS_ORDER where pay_status=1
		<if test="startTime!=null and startTime!=''">
			and create_time &gt;= #{startTime}
		</if>
		<if test="endTime!=null and endTime!=''">
			and create_time &lt;= #{endTime}
		</if>
	</select>
	<update id="sellerSendGoods">
		update TB_GOODS_ORDER set pay_status = 2,
		send_code =
		#{sendCode} where pay_id = #{orderId}
	</update>
	<update id="buyerTakeGoods">
		update TB_GOODS_ORDER set pay_status = 3 where pay_id
		= #{orderId}
	</update>
	<!-- AI分析统计需要 订单数 -->
	<select id="getOrderCount" resultType="int">
		select count(*) from
		TB_GOODS_ORDER where login_plat=#{appId}
	</select>
	<!-- AI分析统计需要 销售额 -->
	<select id="getSalesAmount" resultType="int">
		select count(real_fee)
		from TB_GOODS_ORDER where login_plat=#{appId}
	</select>
</mapper>